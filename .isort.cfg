# .isort.cfg
# Python ‘import’ statement sorter (ISort) configuration for this code base.
# Documentation: <URL:https://pycqa.github.io/isort/docs/configuration/options>.

[settings]

# Ensure correct syntax (or don't change the file) for in-place changes?
atomic = true

# Maximum length (columns) for a single-line import statement.
line_length = 79

# Maximum length (columns) for one line in a multi-line import statement.
wrap_length = 60

# Number of blank lines to separate imports from following statements.
lines_after_imports = 2

# Filenames that ‘isort’ should not process.
skip =

# Names of sections that group import statements.
# The order in this sequence specifies the order the sections should appear.
sections =
    FUTURE
    STDLIB
    FRAMEWORK
    THIRDPARTY
    FIRSTPARTY
    LOCALFOLDER

# Name of section for any import statement of a package not known to ‘isort’.
default_section = THIRDPARTY

# Package names that are known for the ‘FRAMEWORK’ section.
known_framework =

# Package names that are known for the ‘THIRDPARTY’ section.
known_third_party =

# Package names that are known for the ‘FIRSTPARTY’ section.
known_first_party =
    chug
    util

# Text for indentation of continuation lines.
indent = '    '

# The multi-line import statement style (integer code).
# See the ‘isort’ documentation for the meaning of each code.
multi_line_output = VERTICAL_HANGING_INDENT

# Sort imports by length (not alphanumeric)?
length_sort = false

# Add a trailing comma on the list of ‘from’ import names?
include_trailing_comma = true

# For continuation lines, wrap lines in parentheses?
use_parentheses = true

# Sort by package (ignoring ‘from’ vs. ‘import’) within section?
force_sort_within_sections = true

# Sort relative imports from shorter to longer leading dots?
reverse_relative = false

# Ensure that a wildcard (‘*’) import is the only import from a namespace?
combine_star = true

# Force multiple names imported with ‘from’ to be separate statements?
force_single_line = false

# Threshold of ‘from’ imports to be grid wrapped regardless of line length.
force_grid_wrap = 2

# Format import statements as a visually-balanced grid?
balanced_wrapping = false

# Combine an ‘import … as …’ onto the same line?
combine_as_imports = true


# Local variables:
# coding: utf-8
# mode: conf
# End:
# vim: fileencoding=utf-8 filetype=dosini :
